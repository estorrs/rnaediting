include required(classpath("application"))
backend {
  default = "LSF"
  providers {
    LSF {
      actor-factory = "cromwell.backend.impl.sfs.config.ConfigBackendLifecycleActorFactory"
      config {
        runtime-attributes = """
        Int cpu = 20
        Int memory_kb = 30000
        Int memory_mb = 30000
        String? docker
        """
        submit = """
        bsub \
        -J ${job_name} \
        -cwd ${cwd} \
        -o /dev/null \
        -e /gscmnt/gc2508/dinglab/estorrs/data/rnaediting/cwl/alignment/error_logs/cromwell-%J.err \
        ${"-M " + "30000"} \
        ${"-n " + cpu} \
        ${"-R \"select[mem>" + "30000" + "] rusage[mem=" + "30000" + "]\""} \
        /bin/bash ${script}
        """
        submit-docker = """
        LSF_DOCKER_VOLUMES=${cwd}:${docker_cwd} \
        bsub \
        -J ${job_name} \
        -cwd ${cwd} \
        -o /dev/null \
        -e /gscmnt/gc2508/dinglab/estorrs/data/rnaediting/cwl/alignment/error_logs/cromwell-%J.err \
        ${"-a \"docker(" + docker + ")\""} \
        -q research-hpc \
        ${"-M " + "3000000"} \
        ${"-n " + "20"} \
        ${"-R \"select[mem>" + "40000" + "] rusage[mem=" + "40000" + "]\""} \
        /bin/bash ${script}
        """
        kill = "bkill ${job_id}"
        docker-kill = "bkill ${job_id}"
        check-alive = "bjobs -noheader -o stat ${job_id} | /bin/grep 'PEND\\|RUN'"
        job-id-regex = "Job <(\\d+)>.*"
        root = "/gscmnt/gc2508/dinglab/estorrs/data/rnaediting/cwl/alignment/results"
      }
    }
  }
}
workflow-options {
  workflow-log-dir = "/gscmnt/gc2508/dinglab/estorrs/data/rnaediting/cwl/alignment/workflow_logs"
}
